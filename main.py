@app.route("/process_audio", methods=["POST"])
def process_audio():
    try:
        data = request.get_json()
        voice_url = data.get("voice_url")  # ‚Üê –ü—Ä—è–º–∞—è —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∞–π–ª
        client_id = data.get("client_id")
        
        print(f"üéØ Received voice_url: {voice_url}")
        
        if not voice_url or not voice_url.startswith('http'):
            return jsonify({
                "status": "error", 
                "message": "Invalid voice URL"
            }), 400

        # 1. –°–∫–∞—á–∏–≤–∞–µ–º –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ –ø—Ä—è–º–æ–π —Å—Å—ã–ª–∫–µ
        print("üì• Downloading voice message...")
        voice_response = requests.get(voice_url)
        voice_response.raise_for_status()  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—à–∏–±–∫–∏

        # 2. –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        voice_filename = f"voice_{uuid.uuid4().hex}.ogg"
        with open(voice_filename, "wb") as f:
            f.write(voice_response.content)
        print(f"üíæ Saved as: {voice_filename}")

        # 3. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞—É–¥–∏–æ
        output_filename = f"mixed_{uuid.uuid4().hex}.mp3"
        output_path = os.path.join(os.getcwd(), output_filename)
        
        print("üéµ Mixing audio with music...")
        mix_voice_with_music(voice_filename, output_path, GITHUB_MUSIC_URL)

        # 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —á–µ—Ä–µ–∑ Telegram API
        print("üì§ Sending result to user...")
        with open(output_path, "rb") as audio_file:
            files = {'audio': audio_file}
            send_url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendAudio"
            send_data = {
                'client_id': client_id,
                'title': 'üéµ –í–∞—à –º–∏–∫—Å!',
                'caption': '–ì–æ—Ç–æ–≤–æ–µ –∞—É–¥–∏–æ —Å —Ñ–æ–Ω–æ–≤–æ–π –º—É–∑—ã–∫–æ–π'
            }
            send_response = requests.post(send_url, data=send_data, files=files)
            ready_file_id = send_response.json()['result']['audio']['file_id']

        # 5. –û—á–∏—Å—Ç–∫–∞
        cleanup(voice_filename)
        cleanup(output_path)

        return jsonify({
            "status": "success",
            "ready_file_id": ready_file_id,
            "message": "Audio processed successfully"
        })
        
    except Exception as e:
        print(f"‚ùå Error: {str(e)}")
        return jsonify({"status": "error", "message": str(e)}), 500
